---
const navItems = [
  { name: 'Home', path: '/' },
  { name: 'Products', path: '/products' },
  { name: 'Blog', path: '/blog'},
  { name: 'About', path: '/about' },
  { name: 'Contact', path: '/contact' },
  { name: 'Cart', path: '/cart' }
];

const currentPath = Astro.url.pathname;
---

<header class="fixed w-full z-50 bg-white/90 backdrop-blur-md border-b border-gray-200">
  <nav class="max-w-7xl mx-auto px-4">
    <div class="flex items-center justify-between h-16">
      <a href="/" class="text-xl font-semibold">NR</a>
      
      <!-- Desktop Navigation -->
      <div class="hidden md:flex items-center space-x-8">
        {navItems.map((item) => (
          <a 
            href={item.path}
            class:list={[
              "text-sm hover:text-gray-900 transition-colors",
              currentPath === item.path ? "text-black font-medium" : "text-gray-600"
            ]}
          >
            {item.name}
            {item.name === 'Cart' && (
              <span id="cart-count" class="ml-1 hidden bg-black text-white text-xs px-1.5 py-0.5 rounded-full">
                0
              </span>
            )}
          </a>
        ))}
      </div>

      <!-- Mobile Menu Button -->
      <button 
        id="mobile-menu-button"
        class="md:hidden p-2 rounded-md text-gray-600 hover:text-gray-900 hover:bg-gray-100"
      >
        <svg class="h-6 w-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
        </svg>
      </button>
    </div>

    <!-- Mobile Navigation -->
    <div id="mobile-menu" class="hidden md:hidden py-4">
      {navItems.map((item) => (
        <a 
          href={item.path}
          class:list={[
            "block py-2 text-base hover:text-gray-900 transition-colors",
            currentPath === item.path ? "text-black font-medium" : "text-gray-600"
          ]}
        >
          {item.name}
        </a>
      ))}
    </div>
  </nav>
</header>

<script>
  // Mobile menu toggle
  const mobileMenuButton = document.getElementById('mobile-menu-button');
  const mobileMenu = document.getElementById('mobile-menu');

  mobileMenuButton?.addEventListener('click', () => {
    mobileMenu?.classList.toggle('hidden');
  });

  // Update cart count
  function updateCartCount() {
    const cart = JSON.parse(localStorage.getItem('cart') || '[]');
    const count = cart.reduce((total: number, item: any) => total + item.quantity, 0);
    const cartCount = document.getElementById('cart-count');
    
    if (cartCount) {
      cartCount.textContent = count.toString();
      cartCount.style.display = count > 0 ? 'inline-flex' : 'none';
    }
  }

  // Initialize cart count
  document.addEventListener('DOMContentLoaded', updateCartCount);
  window.addEventListener('cart-updated', updateCartCount);
</script>
