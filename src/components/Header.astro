---
const navItems = [
  { name: 'Home', path: '/' },
  { name: 'Products', path: '/products' },
  { name: 'Blog', path: '/blog'},
  { name: 'About', path: '/about' },
  { name: 'Contact', path: '/contact' },
  { name: 'Cart', path: '/cart' }
];

const currentPath = Astro.url.pathname;
---

<header class="fixed w-full z-50 bg-white/90 backdrop-blur-md border-b border-gray-200">
  <nav class="max-w-7xl mx-auto px-4">
    <div class="flex items-center justify-between h-16">
      <a href="/" class="text-xl font-semibold">NR</a>

      <!-- Desktop Navigation -->
      <div class="hidden md:flex items-center space-x-8">
        {navItems.map((item) => (
          <a 
            href={item.path}
            class:list={[
              "text-sm hover:text-gray-900 transition-colors",
              currentPath === item.path ? "text-black font-medium" : "text-gray-600"
            ]}
          >
            {item.name}
            {item.name === 'Cart' && (
              <span id="cart-count" class="ml-1 hidden bg-black text-white text-xs px-1.5 py-0.5 rounded-full">
                0
              </span>
            )}
          </a>
        ))}
      </div>

      <!-- Mobile Menu Button -->
      <button 
        type="button" 
        class="block md:hidden p-2 text-gray-600 hover:bg-gray-100 rounded-lg transition-colors" 
        id="mobile-button"
        aria-label="Toggle menu"
      >
        <svg class="w-6 h-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
        </svg>
      </button>

      <!-- Mobile Navigation -->
      <div class="mobile-menu md:hidden">
        {navItems.map((item) => (
          <a 
            href={item.path}
            class:list={[
              "block py-2 text-base transition-colors",
              currentPath === item.path ? "text-black font-medium" : "text-gray-600"
            ]}
          >
            {item.name}
          </a>
        ))}
      </div>
    </div>
  </nav>
</header>

<style>
  .mobile-menu {
    display: none;
    position: fixed;
    top: 64px;
    left: 0;
    right: 0;
    background: white;
    padding: 1rem;
    flex-direction: column;
    box-shadow: 0 2px 5px rgba(0,0,0,0.1);
    z-index: 40;
  }

  .mobile-menu.show {
    display: flex;
    animation: slideDown 0.2s ease-out;
  }

  @keyframes slideDown {
    from {
      opacity: 0;
      transform: translateY(-10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style>

<script>
  document.addEventListener('astro:page-load', () => {
    const button = document.getElementById('mobile-button');
    const menu = document.querySelector('.mobile-menu');
    
    if (button && menu) {
      button.addEventListener('click', () => {
        console.log('Menu clicked'); // Debug line
        menu.classList.toggle('show');
        document.body.style.overflow = menu.classList.contains('show') ? 'hidden' : '';
      });

      // Close menu when clicking outside
      document.addEventListener('click', (e) => {
        const target = e.target as Node;
        if (!button.contains(target) && 
            !menu.contains(target) && 
            menu.classList.contains('show')) {
          menu.classList.remove('show');
          document.body.style.overflow = '';
        }
      });

      // Close menu when clicking a link
      const links = menu.querySelectorAll('a');
      links.forEach(link => {
        link.addEventListener('click', () => {
          menu.classList.remove('show');
          document.body.style.overflow = '';
        });
      });
    }
  });

  // Cart functionality
  function handleCartCount() {
    const cart = JSON.parse(localStorage.getItem('cart') || '[]');
    const count = cart.reduce((total: number, item: { quantity: number }): number => total + item.quantity, 0);
    const cartCount = document.getElementById('cart-count');
    
    if (cartCount) {
      cartCount.textContent = count.toString();
      cartCount.style.display = count > 0 ? 'inline-flex' : 'none';
    }
  }

  document.addEventListener('astro:page-load', handleCartCount);
  window.addEventListener('cart-updated', handleCartCount);
</script>
